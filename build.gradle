plugins {
    id "me.champeau.gradle.jmh" version "0.4.8"
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'jacoco'
}

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'groovy'
apply plugin: 'me.champeau.gradle.jmh'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
    }
    runtime {
        java {
            srcDir 'src'
            include 'optic/lua/runtime/**'
        }
    }
    test {
        groovy {
            srcDir 'test'
            srcDir 'integration-test'
        }
    }
    jmh {
        java {
            srcDir 'jmh-benchmarks'
        }
    }
}

mainClassName = 'optic.lua.Main'

jar {
    archiveBaseName = 'optic-lua-lib'
}

shadowJar {
    archiveBaseName = 'optic-lua'
    archiveClassifier = null
    minimize {
        exclude(dependency('org.slf4j:slf4j-simple:.*'))
    }
}

run.enabled = false

compileRuntimeJava {
    dependsOn compileJava
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

task runtimeJar(type: Jar) {
    dependsOn compileRuntimeJava
    from sourceSets.runtime.output
    archiveBaseName = 'optic-lua-rt'
    archiveClassifier = null
}

tasks.withType(JavaCompile) {
    options.compilerArgs << '-Xlint:deprecation'
}

dependencies {
    // At the start I ran into some issues (see https://github.com/melix/jmh-gradle-plugin/issues/111)
    // Currently it works fine for me, but just in case if it ever happens again, try uncommenting this:
    // compile group: 'org.openjdk.jmh', name: 'jmh-generator-reflection', version: '1.18'
    // Also, try running on a fresh gradle daemon!
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.8.0-beta2'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.8.0-beta2'
    compile 'info.picocli:picocli:4.0.0-alpha-2'
    compile group: 'org.jetbrains', name: 'annotations', version: '16.0.2'
    compile 'com.github.PhilipRoman:lua-parser:1.0.0'
    testCompile 'org.codehaus.groovy:groovy-all:2.5.4'
    compile 'org.codehaus.janino:janino:3.0.11'
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}
